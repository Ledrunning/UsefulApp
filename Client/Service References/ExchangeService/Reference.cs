//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.Service_References.ExchangeService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExchangeService.IExchangeServiceContract")]
    public interface IExchangeServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExchangeServiceContract/Get", ReplyAction="http://tempuri.org/IExchangeServiceContract/GetResponse")]
        decimal Get(decimal money, string inValue, string outValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExchangeServiceContract/Get", ReplyAction="http://tempuri.org/IExchangeServiceContract/GetResponse")]
        System.Threading.Tasks.Task<decimal> GetAsync(decimal money, string inValue, string outValue);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExchangeServiceContractChannel : IExchangeServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExchangeServiceContractClient : System.ServiceModel.ClientBase<IExchangeServiceContract>, IExchangeServiceContract {
        
        public ExchangeServiceContractClient() {
        }
        
        public ExchangeServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExchangeServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExchangeServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExchangeServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public decimal Get(decimal money, string inValue, string outValue) {
            return base.Channel.Get(money, inValue, outValue);
        }
        
        public System.Threading.Tasks.Task<decimal> GetAsync(decimal money, string inValue, string outValue) {
            return base.Channel.GetAsync(money, inValue, outValue);
        }
    }
}
